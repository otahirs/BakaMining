@using System.IO
@using ProcessM.NET.Import
@using ProcessM.NET.Model
@using ProcessM.NET.Model.DataAnalysis
@inject Services.Storage.EventLogStore EventLogStore

<MudDialog>
    <DialogContent>
        @if (importedLog == null)
        {
            <MudAlert Severity="Severity.Warning" Class="mb-4">Files over aprox. 10 000 lines <br/>take a very lot of time to precess.</MudAlert>
            <InputFile id="fileInput" OnChange="OnFileSelected" hidden accept=".csv"/>

            <MudButton HtmlTag="label"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       StartIcon="@Icons.Material.Outlined.FileUpload"
                       for="fileInput">
                Select File
            </MudButton>
        }
        else
        {
            @if (isLoading) {
                <MudProgressCircular Color="Color.Primary"  Indeterminate="true"/>
            } else {
                <MudList>
                    <MudListItem Icon="@Icons.Filled.AttachFile" @key="@file">
                        @file.Name <code>@file.Size bytes</code>
                    </MudListItem>
                </MudList>
                <MudForm @ref="form" @bind-IsValid="@formIsValid">
                    <MudSelect T="string" Label="CaseId" AnchorOrigin="Origin.BottomCenter" Required="true" @bind-Value=@caseId>
                        @foreach (var it in importedLog.Contents.ColumnKeys)
                        {
                            <MudSelectItem Value="@(it)"/>
                        }
                    </MudSelect>
                    <MudSelect T="string" Label="Activity" AnchorOrigin="Origin.BottomCenter" Required="true" @bind-Value=@activity>
                        @foreach (var it in importedLog.Contents.ColumnKeys)
                        {
                            <MudSelectItem Value="@(it)"/>
                        }
                    </MudSelect>
                </MudForm>
            }
        }
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!formIsValid || isLoading)" Class="ml-auto" OnClick="UploadLog">Upload</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    IBrowserFile file;
    ImportedEventLog importedLog;
    MudForm form;
    bool formIsValid;
    string activity = String.Empty;
    string caseId = String.Empty;
    bool isLoading = false;
    
    private async void OnFileSelected(InputFileChangeEventArgs e)
    {
        foreach (var f in e.GetMultipleFiles())
        {
            file = f;
            await using var memoryString = new MemoryStream();
            await file.OpenReadStream(1000000000).CopyToAsync(memoryString);
            memoryString.Seek(0, SeekOrigin.Begin);
            importedLog = CSVImport.MakeDataFrame(memoryString);
        }
        StateHasChanged();
    }

    private async void UploadLog()
    {
        isLoading = true;
        StateHasChanged();
        await Task.Delay(1);
        importedLog.SetActivity(activity);
        importedLog.SetCaseId(caseId);
        var logFile = new EventLogFile()
        {
            Metadata = new FileMetadata()
            {
                Name = file.Name,
                Modified = file.LastModified,
                Size = file.Size
            },
            EventLog = new WorkflowLog(importedLog)
        };
        await EventLogStore.Add(logFile);
        MudDialog.Close(DialogResult.Ok(true));
    }
}